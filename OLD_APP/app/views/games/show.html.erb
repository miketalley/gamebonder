<div class='container'>
  <div class='row' ng-controller="GamesController">
    <div class='col-md-2'>
      <img src='<%= @game.icon_url %>'>
    </div>
    <div class='col-md-10'>
      <h1 class='game-name ng-animate ng-enter'><%= @game.name %></h1>
      <h4>
      <dl>
        <dt><a href ng-click='showBonds = !showBonds'><h3 class='game-name'>
            <span class="glyphicon glyphicon-th-list"></span>
            <%= @game.bonds.count %> Bonds</h3></a>
        </dt>
        <div class='bondList' ng-show='showBonds'>
          <% @game.bonds.each do |bond| %>
            <dd>
            <% if bond.source.name == @game.name %>
              <a class='game-name bondItem' href='<%= bond.target.id %>'><%= bond.target.name %></a>
              <ul class="list-group"><li class="list-group-item">Strength <%= bond.strength %></li></ul>
            <% else %>
              <a class='game-name bondItem' href='<%= bond.target.id %>'><%= bond.source.name %></a>
              <ul class="list-group"><li class="list-group-item">Strength <%= bond.strength %></li></ul>
            <% end %>
            </dd>
          <% end %>
        </div><!-- bondList -->
      </dl>
      </h4>
    </div><!-- col-md-10 -->
  </div><!-- row -->

  <div class='row'>
    <div class='force-chart'>
      <!-- Display Force Chart for Game -->
      <script>
      var w = window.innerWidth,
          h = window.innerHeight,
          root;

      // Get game ID from URL
      var gameID = window.location.href.split('/').pop();

      var force = d3.layout.force()
          .size([w, h]);

      var svg = d3.select("body").append("svg")
          .attr("width", w)
          .attr("height", h);

      var link = svg.selectAll(".link"),
          node = svg.selectAll(".node");

      d3.json("../games/" + gameID + ".json", function(json) {
        root = json;
        update();
      });

      function update() {
        var nodes = root.games,
            links = root.bonds;

        // Replace references of IDs
        var newLinks = [];

        links.forEach(function(e) {
          var sourceNode = nodes.filter(function(n) { return n.id === e.source_id; })[0],
              targetNode = nodes.filter(function(n) { return n.id === e.target_id; })[0];

          newLinks.push({source: sourceNode, target: targetNode});
        });

        links = newLinks;

        // Draw Game Name
        var texts = svg.selectAll("text")
          .data(nodes)
          .enter()
          .append("text")
          .attr("fill", "white")
          .attr("font-family", "sans-serif")
          .attr("font-size", "10px")
          .attr('class', 'txts')
          .text(function(d) { return d.name; });

        // Set Dynamic Force
        force
          .nodes(nodes)
          .links(links)
          .size([w,h])
          .linkDistance([150])
          .charge([-2500])
          .gravity(0.3)
          .start();

        // Draw Lines for Bonds
        var edges = svg.selectAll("line")
          .data(links)
          .enter()
          .append("line")
          .style("stroke", "#fff")
          .style("stroke-width", 3)
          .attr("marker-end", "url(#end)");


        // Draw Nodes
        var node = svg.selectAll(".node")
          .data(nodes)
          .enter()
          .append("g")
          .attr('class', 'node')
          .call(force.drag);

        // Append Images to Nodes
        node.append('image')
          .attr("xlink:href", function(d){ return d.thumb_url; })
          .attr('ondblclick', function(d){ return "openLink('/games/" + d.id + "')"; })
          .attr("x", 0)
          .attr("y", 5)
          .attr("width", 50)
          .attr("height", 50);

        // Turn on Force
        force.on("tick", function() {
          edges
            .attr("x1", function(d) { return d.source.x + 20; })
            .attr("y1", function(d) { return d.source.y + 20; })
            .attr("x2", function(d) { return d.target.x + 20; })
            .attr("y2", function(d) { return d.target.y + 20; });
          node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
          texts.attr("transform", function(d) {
            return "translate(" + d.x + "," + d.y + ")";
          });
        });
      }
      </script>
    </div>
  </div>
</div>
