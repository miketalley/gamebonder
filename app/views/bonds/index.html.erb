<h1>Listing bonds</h1>

<script>
/* Set the diagrams Height & Width */
    var h = 700, w = 1050;
/* Set the color scale we want to use */
    var color = d3.scale.category20();
/* Establish/instantiate an SVG container object */
    var svg = d3.select("body")
      .append("svg")
      .attr("height",h)
      .attr("width",w);
/* Build the directional arrows for the links/edges */
  svg.append("svg:defs")
  .selectAll("marker")
  .data(["end"])
  .enter().append("svg:marker")
  .attr("id", String)
  .attr("viewBox", "0 -5 10 10")
  .attr("refX", 15)
  .attr("refY", -1.5)
  .attr("markerWidth", 6)
  .attr("markerHeight", 6)
  .attr("orient", "auto")
  .append("svg:path")
  .attr("d", "M0,-5L10,0L0,5");
/* Pre-Load the json data using the queue library */
queue()
  // Links
  // .defer(d3.json, "../bonds.json")
  // Nodes
  .defer(d3.json, "../games.json")
  .await(makeDiag);

// var my_links = $.map(my_data, function(d){return {"source": d.authorA, "target": d.authorB, "value":d.paperCount, "origin": d};});

/* Define the main worker or execution function */
function makeDiag(error, nodes, links, table) {
  /* Draw the node labels first */
  var texts = svg.selectAll("text")
    .data(nodes)
    .enter()
    .append("text")
    .attr("fill", "black")
    .attr("font-family", "sans-serif")
    .attr("font-size", "10px")
    .attr('class', 'txts')
    .text(function(d) { return d.name; });

  /* Establish the dynamic force behavor of the nodes */
  var force = d3.layout.force()
    .nodes(nodes)
    // .links(links)
    .size([w,h])
    .linkDistance([150])
    .charge([-2500])
    .gravity(0.3)
    .start();

  /* Draw the edges/links between the nodes */
  // var edges = svg.selectAll("line")
  //                 .data(links)
  //                 .enter()
  //                 .append("line")
  //                 .style("stroke", "#ccc")
  //                 .style("stroke-width", 1)
  //                 .attr("marker-end", "url(#end)");

  /* Draw the nodes themselves */
  var node = svg.selectAll(".node")
    .data(nodes)
    .enter()
    .append("g")
    .attr('class', 'node')
    .call(force.drag);

  node.append('image')
    .attr("xlink:href", function(d){ return d.thumb_url; })
    .attr("x", 0)
    .attr("y", 10)
    .attr("width", 50)
    .attr("height", 50);

  /* Run the Force effect */
  force.on("tick", function() {
    // edges.attr("x1", function(d) { return d.source.x; })
    //   .attr("y1", function(d) { return d.source.y; })
    //   .attr("x2", function(d) { return d.target.x; })
    //   .attr("y2", function(d) { return d.target.y; });
    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
    texts.attr("transform", function(d) {
      return "translate(" + d.x + "," + d.y + ")";
    });
  }); // End tick func
} // End makeDiag worker func

</script>

<br>

<%= link_to 'New Bond', new_bond_path %>
